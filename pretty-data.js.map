{"version":3,"sources":["pretty-data.jsx"],"names":["pp","shift","step","ix","push","prototype","xml","text","ar","replace","split","len","length","inComment","deep","str","search","exec","slice","json","JSON","stringify","parse","css","isSubquery","parenthesisLevel","split_sql","tab","sql","ar_by_quote","concat","xmlmin","preserveComments","jsonmin","cssmin","sqlmin","pd"],"mappings":"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","sourcesContent":["/**\n* pretty-data - nodejs plugin to pretty-print or minify data in XML, JSON and CSS formats.\n*\n* Version - 0.40.0\n* Copyright (c) 2012 Vadim Kiryukhin\n* vkiryukhin @ gmail.com\n* http://www.eslinstructor.net/pretty-data/\n*\n* Dual licensed under the MIT and GPL licenses:\n*   http://www.opensource.org/licenses/mit-license.php\n*   http://www.gnu.org/licenses/gpl.html\n*\n*\tpd.xml(data ) - pretty print XML;\n*\tpd.json(data) - pretty print JSON;\n*\tpd.css(data ) - pretty print CSS;\n*\tpd.sql(data)  - pretty print SQL;\n*\n*\tpd.xmlmin(data [, preserveComments] ) - minify XML;\n*\tpd.jsonmin(data)                      - minify JSON;\n*\tpd.cssmin(data [, preserveComments] ) - minify CSS;\n*\tpd.sqlmin(data)                       - minify SQL;\n*\n* PARAMETERS:\n*\n*\t@data  \t\t\t- String; XML, JSON, CSS or SQL text to beautify;\n* \t@preserveComments\t- Bool (optional, used in minxml and mincss only);\n*\t\t\t\t  Set this flag to true to prevent removing comments from @text;\n*\t@Return \t\t- String;\n*\n* USAGE:\n*\n*\tvar pd  = require('pretty-data').pd;\n*\n*\tvar xml_pp   = pd.xml(xml_text);\n*\tvar xml_min  = pd.xmlmin(xml_text [,true]);\n*\tvar json_pp  = pd.json(json_text);\n*\tvar json_min = pd.jsonmin(json_text);\n*\tvar css_pp   = pd.css(css_text);\n*\tvar css_min  = pd.cssmin(css_text [, true]);\n*\tvar sql_pp   = pd.sql(sql_text);\n*\tvar sql_min  = pd.sqlmin(sql_text);\n*\n* TEST:\n*\tcomp-name:pretty-data$ node ./test/test_xml\n*\tcomp-name:pretty-data$ node ./test/test_json\n*\tcomp-name:pretty-data$ node ./test/test_css\n*\tcomp-name:pretty-data$ node ./test/test_sql\n*/\n\n\nfunction pp() {\n\tthis.shift = ['\\n']; // array of shifts\n\tthis.step = '  '; // 2 spaces\n    var ix = 0;\n\n\t// initialize array with shifts; nesting level == 100 //\n\tfor(ix=0;ix<100;ix++){\n\t\tthis.shift.push(this.shift[ix]+this.step);\n\t}\n\n}\n\n// ----------------------- XML section ----------------------------------------------------\n\npp.prototype.xml = function(text) {\n\n\tvar ar = text.replace(/>\\s{0,}</g,\"><\")\n\t\t\t\t .replace(/</g,\"~::~<\")\n\t\t\t\t .replace(/xmlns\\:/g,\"~::~xmlns:\")\n\t\t\t\t .replace(/xmlns\\=/g,\"~::~xmlns=\")\n\t\t\t\t .split('~::~'),\n\t\tlen = ar.length,\n\t\tinComment = false,\n\t\tdeep = 0,\n\t\tstr = '',\n\t\tix = 0;\n\n\t\tfor(ix=0;ix<len;ix++) {\n\t\t\t// start comment or <![CDATA[...]]> or <!DOCTYPE //\n\t\t\tif(ar[ix].search(/<!/) > -1) {\n\t\t\t\tstr += this.shift[deep]+ar[ix];\n\t\t\t\tinComment = true;\n\t\t\t\t// end comment  or <![CDATA[...]]> //\n\t\t\t\tif(ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1 || ar[ix].search(/!DOCTYPE/) > -1 ) {\n\t\t\t\t\tinComment = false;\n\t\t\t\t}\n\t\t\t} else\n\t\t\t// end comment  or <![CDATA[...]]> //\n\t\t\tif(ar[ix].search(/-->/) > -1 || ar[ix].search(/\\]>/) > -1) {\n\t\t\t\tstr += ar[ix];\n\t\t\t\tinComment = false;\n\t\t\t} else\n\t\t\t// <elm></elm> //\n\t\t\tif( /^<\\w/.exec(ar[ix-1]) && /^<\\/\\w/.exec(ar[ix]) &&\n\t\t\t\t/^<[\\w:\\-\\.\\,]+/.exec(ar[ix-1]) == /^<\\/[\\w:\\-\\.\\,]+/.exec(ar[ix])[0].replace('/','')) {\n\t\t\t\tstr += ar[ix];\n\t\t\t\tif(!inComment) deep--;\n\t\t\t} else\n\t\t\t // <elm> //\n\t\t\tif(ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) == -1 && ar[ix].search(/\\/>/) == -1 ) {\n\t\t\t\tstr = !inComment ? str += this.shift[deep++]+ar[ix] : str += ar[ix];\n\t\t\t} else\n\t\t\t // <elm>...</elm> //\n\t\t\tif(ar[ix].search(/<\\w/) > -1 && ar[ix].search(/<\\//) > -1) {\n\t\t\t\tstr = !inComment ? str += this.shift[deep]+ar[ix] : str += ar[ix];\n\t\t\t} else\n\t\t\t// </elm> //\n\t\t\tif(ar[ix].search(/<\\//) > -1) {\n\t\t\t\tstr = !inComment ? str += this.shift[--deep]+ar[ix] : str += ar[ix];\n\t\t\t} else\n\t\t\t// <elm/> //\n\t\t\tif(ar[ix].search(/\\/>/) > -1 ) {\n\t\t\t\tstr = !inComment ? str += this.shift[deep]+ar[ix] : str += ar[ix];\n\t\t\t} else\n\t\t\t// <? xml ... ?> //\n\t\t\tif(ar[ix].search(/<\\?/) > -1) {\n\t\t\t\tstr += this.shift[deep]+ar[ix];\n\t\t\t} else\n\t\t\t// xmlns //\n\t\t\tif( ar[ix].search(/xmlns\\:/) > -1  || ar[ix].search(/xmlns\\=/) > -1) {\n\t\t\t\tstr += this.shift[deep]+ar[ix];\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tstr += ar[ix];\n\t\t\t}\n\t\t}\n\n\treturn  (str[0] == '\\n') ? str.slice(1) : str;\n};\n\n// ----------------------- JSON section ----------------------------------------------------\n\npp.prototype.json = function(text) {\n\n\tif ( typeof text === \"string\" ) {\n\t\treturn JSON.stringify(JSON.parse(text), null, this.step);\n\t}\n\tif ( typeof text === \"object\" ) {\n\t\treturn JSON.stringify(text, null, this.step);\n\t}\n\treturn null;\n};\n\n// ----------------------- CSS section ----------------------------------------------------\n\npp.prototype.css = function(text) {\n\n\tvar ar = text.replace(/\\s{1,}/g,' ')\n\t\t\t\t.replace(/\\{/g,\"{~::~\")\n\t\t\t\t.replace(/\\}/g,\"~::~}~::~\")\n\t\t\t\t.replace(/\\;/g,\";~::~\")\n\t\t\t\t.replace(/\\/\\*/g,\"~::~/*\")\n\t\t\t\t.replace(/\\*\\//g,\"*/~::~\")\n\t\t\t\t.replace(/~::~\\s{0,}~::~/g,\"~::~\")\n\t\t\t\t.split('~::~'),\n\t\tlen = ar.length,\n\t\tdeep = 0,\n\t\tstr = '',\n\t\tix = 0;\n\n\t\tfor(ix=0;ix<len;ix++) {\n\n\t\t\tif( /\\{/.exec(ar[ix]))  {\n\t\t\t\tstr += this.shift[deep++]+ar[ix];\n\t\t\t} else\n\t\t\tif( /\\}/.exec(ar[ix]))  {\n\t\t\t\tstr += this.shift[--deep]+ar[ix];\n\t\t\t} else\n\t\t\tif( /\\*\\\\/.exec(ar[ix]))  {\n\t\t\t\tstr += this.shift[deep]+ar[ix];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstr += this.shift[deep]+ar[ix];\n\t\t\t}\n\t\t}\n\t\treturn str.replace(/^\\n{1,}/,'');\n};\n\n// ----------------------- SQL section ----------------------------------------------------\n\nfunction isSubquery(str, parenthesisLevel) {\n  return  parenthesisLevel - (str.replace(/\\(/g,'').length - str.replace(/\\)/g,'').length );\n}\n\nfunction split_sql(str, tab) {\n\n    return str.replace(/\\s{1,}/g,\" \")\n\n        .replace(/ AND /ig,\"~::~\"+tab+tab+\"AND \")\n        .replace(/ BETWEEN /ig,\"~::~\"+tab+\"BETWEEN \")\n        .replace(/ CASE /ig,\"~::~\"+tab+\"CASE \")\n        .replace(/ ELSE /ig,\"~::~\"+tab+\"ELSE \")\n        .replace(/ END /ig,\"~::~\"+tab+\"END \")\n        .replace(/ FROM /ig,\"~::~FROM \")\n        .replace(/ GROUP\\s{1,}BY/ig,\"~::~GROUP BY \")\n        .replace(/ HAVING /ig,\"~::~HAVING \")\n        //.replace(/ IN /ig,\"~::~\"+tab+\"IN \")\n        .replace(/ IN /ig,\" IN \")\n        .replace(/ JOIN /ig,\"~::~JOIN \")\n        .replace(/ CROSS~::~{1,}JOIN /ig,\"~::~CROSS JOIN \")\n        .replace(/ INNER~::~{1,}JOIN /ig,\"~::~INNER JOIN \")\n        .replace(/ LEFT~::~{1,}JOIN /ig,\"~::~LEFT JOIN \")\n        .replace(/ RIGHT~::~{1,}JOIN /ig,\"~::~RIGHT JOIN \")\n        .replace(/ ON /ig,\"~::~\"+tab+\"ON \")\n        .replace(/ OR /ig,\"~::~\"+tab+tab+\"OR \")\n        .replace(/ ORDER\\s{1,}BY/ig,\"~::~ORDER BY \")\n        .replace(/ OVER /ig,\"~::~\"+tab+\"OVER \")\n        .replace(/\\(\\s{0,}SELECT /ig,\"~::~(SELECT \")\n        .replace(/\\)\\s{0,}SELECT /ig,\")~::~SELECT \")\n        .replace(/ THEN /ig,\" THEN~::~\"+tab+\"\")\n        .replace(/ UNION /ig,\"~::~UNION~::~\")\n        .replace(/ USING /ig,\"~::~USING \")\n        .replace(/ WHEN /ig,\"~::~\"+tab+\"WHEN \")\n        .replace(/ WHERE /ig,\"~::~WHERE \")\n        .replace(/ WITH /ig,\"~::~WITH \")\n        //.replace(/\\,\\s{0,}\\(/ig,\",~::~( \")\n        //.replace(/\\,/ig,\",~::~\"+tab+tab+\"\")\n        .replace(/ ALL /ig,\" ALL \")\n        .replace(/ AS /ig,\" AS \")\n        .replace(/ ASC /ig,\" ASC \")\n        .replace(/ DESC /ig,\" DESC \")\n        .replace(/ DISTINCT /ig,\" DISTINCT \")\n        .replace(/ EXISTS /ig,\" EXISTS \")\n        .replace(/ NOT /ig,\" NOT \")\n        .replace(/ NULL /ig,\" NULL \")\n        .replace(/ LIKE /ig,\" LIKE \")\n        .replace(/\\s{0,}SELECT /ig,\"SELECT \")\n        .replace(/~::~{1,}/g,\"~::~\")\n        .split('~::~');\n}\n\npp.prototype.sql = function(text) {\n\n    var ar_by_quote = text.replace(/\\s{1,}/g,\" \")\n                        .replace(/\\'/ig,\"~::~\\'\")\n                        .split('~::~'),\n        len = ar_by_quote.length,\n        ar = [],\n        deep = 0,\n        tab = this.step,\n        parenthesisLevel = 0,\n        str = '',\n        ix = 0;\n\n    for(ix=0;ix<len;ix++) {\n\n        if(ix%2) {\n            ar = ar.concat(ar_by_quote[ix]);\n        } else {\n            ar = ar.concat(split_sql(ar_by_quote[ix], tab) );\n        }\n    }\n\n    len = ar.length;\n    for(ix=0;ix<len;ix++) {\n\n        parenthesisLevel = isSubquery(ar[ix], parenthesisLevel);\n\n        if( /\\s{0,}\\s{0,}SELECT\\s{0,}/.exec(ar[ix]))  {\n            ar[ix] = ar[ix].replace(/\\,/g,\",\\n\"+tab+tab+\"\");\n        }\n\n        if( /\\s{0,}\\(\\s{0,}SELECT\\s{0,}/.exec(ar[ix]))  {\n            deep++;\n            str += this.shift[deep]+ar[ix];\n        } else\n        if( /\\'/.exec(ar[ix]) )  {\n            if(parenthesisLevel<1 && deep) {\n                deep--;\n            }\n            str += ar[ix];\n        }\n        else  {\n            str += this.shift[deep]+ar[ix];\n            if(parenthesisLevel<1 && deep) {\n                deep--;\n            }\n        }\n    }\n\n    str = str.replace(/^\\n{1,}/,'').replace(/\\n{1,}/g,\"\\n\");\n    return str;\n};\n\n// ----------------------- min section ----------------------------------------------------\n\npp.prototype.xmlmin = function(text, preserveComments) {\n\n\tvar str = preserveComments ? text\n\t\t\t\t   : text.replace(/\\<![ \\r\\n\\t]*(--([^\\-]|[\\r\\n]|-[^\\-])*--[ \\r\\n\\t]*)\\>/g,\"\");\n\treturn  str.replace(/>\\s{0,}</g,\"><\");\n};\n\npp.prototype.jsonmin = function(text) {\n\n    return  text.replace(/\\s{0,}\\{\\s{1,}/g,\"{\")\n                .replace(/\\s{0,}\\[$/g,\"[\")\n                .replace(/\\[\\s{0,}/g,\"[\")\n                .replace(/:\\s{0,}\\[/g,':[')\n                .replace(/\\s{1,}\\}\\s{0,}/g,\"}\")\n                .replace(/\\s{0,}\\]\\s{0,}/g,\"]\")\n                .replace(/\\\"\\s{0,}\\,/g,'\",')\n                .replace(/\\,\\s{0,}\\\"/g,',\"')\n                .replace(/\\\"\\s{0,}:/g,'\":')\n                .replace(/:\\s{0,}\\\"/g,':\"')\n                .replace(/:\\s{0,}\\[/g,':[')\n                .replace(/\\,\\s{0,}\\[/g,',[')\n                .replace(/\\,\\s{2,}/g,', ')\n                .replace(/\\]\\s{0,},\\s{0,}\\[/g,'],[');\n};\n\npp.prototype.cssmin = function(text, preserveComments) {\n\n\tvar str = preserveComments ? text\n\t\t\t\t   : text.replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\//g,\"\") ;\n\treturn str.replace(/\\s{1,}/g,' ')\n\t\t\t  .replace(/\\{\\s{1,}/g,\"{\")\n\t\t\t  .replace(/\\}\\s{1,}/g,\"}\")\n\t\t\t  .replace(/\\;\\s{1,}/g,\";\")\n\t\t\t  .replace(/\\/\\*\\s{1,}/g,\"/*\")\n\t\t\t  .replace(/\\*\\/\\s{1,}/g,\"*/\");\n};\n\npp.prototype.sqlmin = function(text) {\n    return text.replace(/\\s{1,}/g,\" \").replace(/\\s{1,}\\(/,\"(\").replace(/\\s{1,}\\)/,\")\");\n};\n\n// --------------------------------------------------------------------------------------------\n\nconst pd = new pp();\n\nexport {pd}"],"file":"pretty-data.js"}